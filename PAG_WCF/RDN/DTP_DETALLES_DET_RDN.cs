//------------------------------------------------------------------------------
//                         Secretaria de Finanzas
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

using PAG_DA;
using PAG_DTO;
using PAG_INTERFACES;
using PAG_MAPPERS;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Linq;
using System.ServiceModel;
using System.Transactions;

namespace PAG_WCF
{
    
    
    public class DTP_DETALLES_DET_RDN
    {

        public List<DTP_DETALLES_DET_DTO> DTP_DETALLES_DET_listado()
        {
            // TODO: Desarrolle su Codigo Aqui.
            List<DTP_DETALLES_DET_DTO> ltDTP_DETALLES_DET = new List<DTP_DETALLES_DET_DTO>();
            //try
            //{
                using (PAG_Entities context = new PAG_Entities(PAG_Security.DictionaryClaims))
                {
                    IQueryable<DTP_DETALLES_DET> query;
                    query = from rec in context.DTP_DETALLES_DET
                            select rec;
                    foreach (var item in query)
                    {
                        var prec = item.ToDto();
                        obtenerDescripciones(ref prec);
                        ltDTP_DETALLES_DET.Add(prec);
                    }
                }
            //}
            //catch (Exception Ex)
            //{
            //    throw new FaultException(PAG_ServicesUtil.ErrorPAGDescDefecto, new FaultCode(PAG_ServicesUtil.ErrorPAGCodDefecto), Ex.InnerException.InnerException.Message);
            //}
            return ltDTP_DETALLES_DET;
        }

        public List<DTP_DETALLES_DET_DTO> DTP_DETALLES_DET_filtrado(DTP_DETALLES_DET_DTO precDto)
        {
            // TODO: Desarrolle su Codigo Aqui.
            List<DTP_DETALLES_DET_DTO> ltDTP_DETALLES_DET = new List<DTP_DETALLES_DET_DTO>();
            //try
            //{
                using (PAG_Entities context = new PAG_Entities(PAG_Security.DictionaryClaims))
                {
                    var entity = precDto.ToEntity();
                    var filters = new DTP_DETALLES_DET_FILTER();
                    var delegates = filters.GetExpression(entity);
                    //Aplicar pFilters Dinamico
                    if (!filters.hasFilters) { return ltDTP_DETALLES_DET; };
                    var filteredCollection = context.DTP_DETALLES_DET.Where(delegates).ToList();
                    //Transformar pFilter Dinamico
                    foreach (var item in filteredCollection) {
                        var prec = item.ToDto();
                        obtenerDescripciones(ref prec);
                        ltDTP_DETALLES_DET.Add(prec);
                    }
                }
            //}
            //catch (Exception Ex)
            //{
            //    throw new FaultException(PAG_ServicesUtil.ErrorPAGDescDefecto, new FaultCode(PAG_ServicesUtil.ErrorPAGCodDefecto), Ex.InnerException.InnerException.Message);
            //}
            return ltDTP_DETALLES_DET;
        }

        public DTP_DETALLES_DET_DTO DTP_DETALLES_DET_inserta(DTP_DETALLES_DET_DTO precDto)
        {
            // TODO: Desarrolle su Codigo Aqui.
            using (PAG_Entities context = new PAG_Entities(PAG_Security.DictionaryClaims))
            {
                //try
                //{
                    precDto.API_ESTADO = "INICIAL";
                    precDto.API_TRANSACCION = "CREAR";
                    precDto.USU_CRE = PAG_ServicesUtil.usuarioPAG;
                    //Insert NewRow Client
                    DTP_DETALLES_DET entity = new DTP_DETALLES_DET();
                    //Begin SavePoint
                    using (TransactionScope SavePoint = new TransactionScope())
                    {
                        entity = precDto.ToEntity();
                        context.DTP_DETALLES_DET.Add(entity);
                        context.SaveChanges();
                        SavePoint.Complete(); //Commit SavePoint
                    }//End SavePoint
                     //Retuning NewRow DataBase
                    precDto.GESTION = entity.GESTION;
                    precDto.INSTITUCION = entity.INSTITUCION;
                    precDto.GA = entity.GA;
                    precDto.NRO_DOCUMENTO = entity.NRO_DOCUMENTO;
                    precDto.INSTITUCION_PROG = entity.INSTITUCION_PROG;
                    precDto.TIPO_PROGRAMACION = entity.TIPO_PROGRAMACION;
                    precDto.SECUENCIA_DOC = entity.SECUENCIA_DOC;
                    precDto.SECUENCIA_DET = entity.SECUENCIA_DET;
                    //Retuning NewAudit DataBase
                    precDto.API_ESTADO = entity.API_ESTADO;
                    precDto.API_TRANSACCION = entity.API_TRANSACCION;
                    precDto.USU_CRE = entity.USU_CRE;
                    precDto.FEC_CRE = entity.FEC_CRE;
                    precDto.USU_MOD = null;
                    precDto.FEC_MOD = null;
                //}
                //catch (Exception ex)
                //{
                //    if (PAG_ServicesUtil.EsErrorORA(ex))
                //    { throw new FaultException(PAG_ServicesUtil.ObtDescExcepcion(ex, soloMensaje: true), new FaultCode(PAG_ServicesUtil.ObtCodExcepcion(ex))); };
                //    throw new FaultException(PAG_ServicesUtil.ErrorPAGDescDefecto, new FaultCode(PAG_ServicesUtil.ErrorPAGCodDefecto), ex.InnerException.Message);
                //}
            }
            //
            return precDto;
        }

        public DTP_DETALLES_DET_DTO DTP_DETALLES_DET_actualiza(DTP_DETALLES_DET_DTO precDto)
        {
            // TODO: Desarrolle su Codigo Aqui.
            using (PAG_Entities context = new PAG_Entities(PAG_Security.DictionaryClaims))
            {
                //Validate RDN
                //Update NewRow Cliente
                //try
                //{
                    var entity = context.DTP_DETALLES_DET.Find(precDto.GESTION, precDto.INSTITUCION, precDto.GA, precDto.NRO_DOCUMENTO, precDto.INSTITUCION_PROG, precDto.GA_PROG, precDto.TIPO_PROGRAMACION, precDto.SECUENCIA_DOC, precDto.SECUENCIA_DET);
                    if (entity == null) { throw new FaultException(PAG_ServicesUtil.ObtDescWFCExcepcion("PAG", 2, soloMensaje: true), new FaultCode(PAG_ServicesUtil.ObtCodWFCExcepcion("PAG", 2))); } /*"Registro NO Encontrado."*/
                    List<API_TRANSICIONES> transicion = context.API_TRANSICIONES.Where(col => col.TABLA == "DTP_DETALLES_DET" && col.ESTADO_INICIAL == entity.API_ESTADO && col.TRANSACCION == precDto.API_TRANSACCION).ToList();
                    if (transicion.Count == 0) { throw new FaultException(PAG_ServicesUtil.ObtDescWFCExcepcion("PAG", 4, soloMensaje: true), new FaultCode(PAG_ServicesUtil.ObtCodWFCExcepcion("PAG", 4))); } /*"Transición NO Definida en Flujo del Registro."*/
                                                                                                                                                                                                              //Assign Data NewRow
                    var pEntity = precDto.ToEntity();
                    entity.ID_DOCUMENTO = pEntity.ID_DOCUMENTO;
                    entity.ID_COLUMNA = pEntity.ID_COLUMNA;
                    entity.VALOR_NUMERO = pEntity.VALOR_NUMERO;
                    entity.VALOR_CADENA = pEntity.VALOR_CADENA;
                    entity.API_TRANSACCION = pEntity.API_TRANSACCION;
                    entity.USU_MOD = PAG_ServicesUtil.usuarioPAG;
                    //Begin SavePoint
                    using (TransactionScope SavePoint = new TransactionScope())
                    {
                        context.DTP_DETALLES_DET.Attach(entity);
                        var entry = context.Entry(entity);
                        entry.State = EntityState.Modified;
                        context.SaveChanges();
                        context.Entry(entity).Reload();
                        SavePoint.Complete(); //Commit SavePoint
                    }//End SavePoint
                     //Retuning NewAudit DataBase
                    precDto.API_ESTADO = entity.API_ESTADO;
                    precDto.API_TRANSACCION = entity.API_TRANSACCION;
                    precDto.USU_MOD = entity.USU_MOD;
                    precDto.FEC_MOD = entity.FEC_MOD;
                //}
                //catch (Exception ex)
                //{
                //    if (PAG_ServicesUtil.EsErrorORA(ex))
                //    { throw new FaultException(PAG_ServicesUtil.ObtDescExcepcion(ex, soloMensaje: true), new FaultCode(PAG_ServicesUtil.ObtCodExcepcion(ex))); };
                //    throw new FaultException(PAG_ServicesUtil.ErrorPAGDescDefecto, new FaultCode(PAG_ServicesUtil.ErrorPAGCodDefecto), ex.InnerException.Message);
                //}
            }
            return precDto;
        }

        public DTP_DETALLES_DET_DTO DTP_DETALLES_DET_elimina(params object[] pkeysDto)
        {
            // TODO: Desarrolle su Codigo Aqui.
            throw new FaultException("PAG-00001 Implementada en Base de Datos.", new FaultCode("PAG-00001"));
        }
        private void obtenerDescripciones(ref DTP_DETALLES_DET_DTO precDto)
        {
            using (PAG_Entities context = new PAG_Entities(PAG_Security.DictionaryClaims))
            {
                var prec = precDto;
                // Valores de columna
                List<DCO_COLUMNAS> lov_cols = context.DCO_COLUMNAS.Where(col => col.ID_COLUMNA == prec.ID_COLUMNA).ToList();
                if (lov_cols.Count > 0) {
                    precDto.DESC_COLUMNA = lov_cols.FirstOrDefault().DESC_COLUMNA;
                    precDto.TIPO_COLUMNA = lov_cols.FirstOrDefault().TIPO_COLUMNA;
                }
                // Valores de columna
                List<DCO_DOCUMENTOS> lov_docs = context.DCO_DOCUMENTOS.Where(col => col.ID_DOCUMENTO == prec.ID_DOCUMENTO).ToList();
                if (lov_docs.Count > 0)
                {
                    precDto.DESC_DOCUMENTO = lov_docs.FirstOrDefault().DESC_DOCUMENTO;
                }
            }
        }
        public void DTP_DETALLES_DET_borrar(DTP_DETALLES_DET_DTO precDto)
        {
            using (PAG_Entities context = new PAG_Entities(PAG_Security.DictionaryClaims))
            {
                var entity = new DTP_DETALLES_DET();
                //try
                //{
                    //Begin SavePoint
                    using (TransactionScope SavePoint = new TransactionScope())
                    {
                        entity = context.DTP_DETALLES_DET.Find(precDto.GESTION, precDto.INSTITUCION, precDto.GA, precDto.NRO_DOCUMENTO,
                                                               precDto.INSTITUCION_PROG, precDto.GA_PROG, precDto.TIPO_PROGRAMACION,
                                                               precDto.SECUENCIA_DOC, precDto.SECUENCIA_DET);
                        context.DTP_DETALLES_DET.Remove(entity);
                        context.SaveChanges();
                        SavePoint.Complete(); //Commit SavePoint
                    }//End SavePoint
                //}
                //catch (Exception ex)
                //{
                //    if (PAG_ServicesUtil.EsErrorORA(ex))
                //    { throw new FaultException(PAG_ServicesUtil.ObtDescExcepcion(ex, soloMensaje: true), new FaultCode(PAG_ServicesUtil.ObtCodExcepcion(ex))); };
                //    throw new FaultException(PAG_ServicesUtil.ErrorPAGDescDefecto, new FaultCode(PAG_ServicesUtil.ErrorPAGCodDefecto), ex.InnerException.Message);
                //}
            }
        }

    }
}
